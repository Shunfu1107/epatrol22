// <auto-generated />
using System;
using AdminPortalV8.Models.Epatrol;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPortalV8.Migrations.EPatrol_Dev
{
    [DbContext(typeof(EPatrol_DevContext))]
    partial class EPatrol_DevContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Aimodel", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<string>("Detection")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("ModelId")
                        .HasName("PK__AIModel__E8D7A12C2F37B63D");

                    b.ToTable("AIModel", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Camera", b =>
                {
                    b.Property<int>("CameraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CameraId"));

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("CameraId")
                        .HasName("PK__Camera__F971E0C832636AFC");

                    b.ToTable("Camera", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CameraHealthResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<string>("CameraName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CameraHealthResult");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CameraStatus", b =>
                {
                    b.Property<int>("CamareStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamareStatusId"));

                    b.Property<int?>("CameraId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("LocationCameraId")
                        .HasColumnType("int")
                        .HasColumnName("Location_CameraID");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime");

                    b.HasKey("CamareStatusId")
                        .HasName("PK__CameraSt__DEF2F8CB81AF87AD");

                    b.HasIndex("CameraId");

                    b.HasIndex("LocationCameraId");

                    b.ToTable("CameraStatus", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CheckList", b =>
                {
                    b.Property<int>("CheckListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckListId"));

                    b.Property<string>("CheckListName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Model")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CheckListId")
                        .HasName("PK__CheckLis__56318341C1EB7173");

                    b.HasIndex("ModelId");

                    b.ToTable("CheckList", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CheckPoint", b =>
                {
                    b.Property<int>("CheckPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckPointId"));

                    b.Property<string>("CheckPointName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("CheckPointId")
                        .HasName("PK__CheckPoi__185C6FE6B9AD55BD");

                    b.HasIndex("LocationId");

                    b.ToTable("CheckPoint", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Guard", b =>
                {
                    b.Property<int>("GuardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuardId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("GuardId")
                        .HasName("PK__Guard__803F90F542A0A434");

                    b.ToTable("Guard", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Level")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA497D8C43CA8");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.LocationCamera", b =>
                {
                    b.Property<int>("LocationCameraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Location_CameraID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationCameraId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RtspUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RTSP_URL");

                    b.HasKey("LocationCameraId")
                        .HasName("PK__Location__657B0DE3168DABFC");

                    b.ToTable("Location_Camera", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Patrol", b =>
                {
                    b.Property<int>("PatrolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatrolId"));

                    b.Property<string>("CheckListName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckPointName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("GuardId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("Time")
                        .HasColumnType("time");

                    b.HasKey("PatrolId")
                        .HasName("PK__Patrol__15509D88E9BE0021");

                    b.HasIndex("GuardId");

                    b.HasIndex("RouteId");

                    b.ToTable("Patrol", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.PatrolType", b =>
                {
                    b.Property<int>("PatrolTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatrolTypeId"));

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PatrolTypeId")
                        .HasName("PK__PatrolTy__51B85F683DFA5205");

                    b.ToTable("PatrolType", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("PatrolId")
                        .HasColumnType("int");

                    b.HasKey("ReportId")
                        .HasName("PK__Report__D5BD48051DA89B60");

                    b.HasIndex("PatrolId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<int?>("CheckPointId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PatrolTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RouteName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("RouteId")
                        .HasName("PK__Route__80979B4DE556DF14");

                    b.HasIndex("CheckPointId");

                    b.HasIndex("PatrolTypeId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Route", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.RouteCheckPoint", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("CheckPointId")
                        .HasColumnType("int");

                    b.Property<string>("CameraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId", "CheckPointId")
                        .HasName("PK__Route_Ch__F1125DB3D024B649");

                    b.HasIndex("CheckPointId");

                    b.ToTable("Route_CheckPoint", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("Day")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ScheduleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B49304D40F9");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.ScheduleCameraCheck", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScheduleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B49A0E5237E");

                    b.ToTable("ScheduleCameraCheck", (string)null);
                });

            modelBuilder.Entity("CameraCameraScheduleCheck", b =>
                {
                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("CameraId", "ScheduleId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Camera_CameraScheduleCheck", (string)null);
                });

            modelBuilder.Entity("CheckPointCamera", b =>
                {
                    b.Property<int>("CheckPointId")
                        .HasColumnType("int");

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.HasKey("CheckPointId", "CameraId")
                        .HasName("PK__CheckPoi__87CB71EA0AB1B56D");

                    b.HasIndex("CameraId");

                    b.ToTable("CheckPoint_Camera", (string)null);
                });

            modelBuilder.Entity("CheckPointCheckList", b =>
                {
                    b.Property<int>("CheckPointId")
                        .HasColumnType("int");

                    b.Property<int>("CheckListId")
                        .HasColumnType("int");

                    b.HasKey("CheckPointId", "CheckListId")
                        .HasName("PK__CheckPoi__1D3F77D2F54A12A8");

                    b.HasIndex("CheckListId");

                    b.ToTable("CheckPoint_CheckList", (string)null);
                });

            modelBuilder.Entity("RouteSchedule", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("RouteId", "ScheduleId")
                        .HasName("PK__Route_Sc__095F3EF93FB8A95C");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Route_Schedule", (string)null);
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CameraStatus", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Camera", null)
                        .WithMany("CameraStatuses")
                        .HasForeignKey("CameraId");

                    b.HasOne("AdminPortalV8.Models.Epatrol.LocationCamera", "LocationCamera")
                        .WithMany("CameraStatuses")
                        .HasForeignKey("LocationCameraId")
                        .HasConstraintName("FK_CameraStatus_Location_Camera");

                    b.Navigation("LocationCamera");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CheckList", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Aimodel", "ModelNavigation")
                        .WithMany("CheckLists")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK__CheckList__Model__73501C2F");

                    b.Navigation("ModelNavigation");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CheckPoint", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Location", "Location")
                        .WithMany("CheckPoints")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_CheckPointLocation");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Patrol", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Guard", "Guard")
                        .WithMany("Patrols")
                        .HasForeignKey("GuardId")
                        .HasConstraintName("FK_PatrolGuard");

                    b.HasOne("AdminPortalV8.Models.Epatrol.Route", "Route")
                        .WithMany("Patrols")
                        .HasForeignKey("RouteId")
                        .HasConstraintName("FK__Patrol__RouteId__7CD98669");

                    b.Navigation("Guard");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Report", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Patrol", "Patrol")
                        .WithMany("Reports")
                        .HasForeignKey("PatrolId")
                        .HasConstraintName("FK__Report__PatrolId__7FB5F314");

                    b.Navigation("Patrol");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Route", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.CheckPoint", "CheckPoint")
                        .WithMany("Routes")
                        .HasForeignKey("CheckPointId")
                        .HasConstraintName("FK__Route__CheckPoin__7814D14C");

                    b.HasOne("AdminPortalV8.Models.Epatrol.PatrolType", "PatrolType")
                        .WithMany("Routes")
                        .HasForeignKey("PatrolTypeId")
                        .HasConstraintName("FK__Route__PatrolTyp__79FD19BE");

                    b.HasOne("AdminPortalV8.Models.Epatrol.Schedule", "Schedule")
                        .WithMany("Routes")
                        .HasForeignKey("ScheduleId")
                        .HasConstraintName("FK__Route__ScheduleI__7908F585");

                    b.Navigation("CheckPoint");

                    b.Navigation("PatrolType");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.RouteCheckPoint", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.CheckPoint", "CheckPoint")
                        .WithMany("RouteCheckPoints")
                        .HasForeignKey("CheckPointId")
                        .IsRequired()
                        .HasConstraintName("FK__Route_Che__Check__0EF836A4");

                    b.HasOne("AdminPortalV8.Models.Epatrol.Route", "Route")
                        .WithMany("RouteCheckPoints")
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK__Route_Che__Route__0E04126B");

                    b.Navigation("CheckPoint");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("CameraCameraScheduleCheck", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Camera", null)
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .IsRequired()
                        .HasConstraintName("FK_CameraScheduleCheck_Camera");

                    b.HasOne("AdminPortalV8.Models.Epatrol.ScheduleCameraCheck", null)
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK_CameraScheduleCheck_ScheduleCameraCheck");
                });

            modelBuilder.Entity("CheckPointCamera", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Camera", null)
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckPoin__Camer__038683F8");

                    b.HasOne("AdminPortalV8.Models.Epatrol.CheckPoint", null)
                        .WithMany()
                        .HasForeignKey("CheckPointId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckPoin__Check__02925FBF");
                });

            modelBuilder.Entity("CheckPointCheckList", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.CheckList", null)
                        .WithMany()
                        .HasForeignKey("CheckListId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckPoin__Check__075714DC");

                    b.HasOne("AdminPortalV8.Models.Epatrol.CheckPoint", null)
                        .WithMany()
                        .HasForeignKey("CheckPointId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckPoin__Check__0662F0A3");
                });

            modelBuilder.Entity("RouteSchedule", b =>
                {
                    b.HasOne("AdminPortalV8.Models.Epatrol.Route", null)
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK__Route_Sch__Route__0A338187");

                    b.HasOne("AdminPortalV8.Models.Epatrol.Schedule", null)
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__Route_Sch__Sched__0B27A5C0");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Aimodel", b =>
                {
                    b.Navigation("CheckLists");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Camera", b =>
                {
                    b.Navigation("CameraStatuses");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.CheckPoint", b =>
                {
                    b.Navigation("RouteCheckPoints");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Guard", b =>
                {
                    b.Navigation("Patrols");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Location", b =>
                {
                    b.Navigation("CheckPoints");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.LocationCamera", b =>
                {
                    b.Navigation("CameraStatuses");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Patrol", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.PatrolType", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Route", b =>
                {
                    b.Navigation("Patrols");

                    b.Navigation("RouteCheckPoints");
                });

            modelBuilder.Entity("AdminPortalV8.Models.Epatrol.Schedule", b =>
                {
                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
