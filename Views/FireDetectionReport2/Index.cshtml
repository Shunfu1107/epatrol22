@{
	ViewBag.Title = "Schedule Continuous Detection Report";
}

<!DOCTYPE html>
<html>
<head>
	<title>Schedule Continuous Detection Report</title>
	<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	<!-- PDF -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>
	<!-- DataTables library loaded before jQuery library -->
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="~/Assets/Plugins/extended-user-identity/mel.addon.module.js"></script>
	<script src="~/Assets/Plugins/datatables.net/js/jquery.dataTables.min.js"></script>
	<script src="~/Assets/Plugins/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
@* 	<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script> *@
	
	<!--Font Style-->
	<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:ital@1&display=swap">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
	<!--CSS Style-->
	<link rel="stylesheet" href="/css/site.css" />

</head>

<body>
	<div class="container-fluid" style="width: 100%; margin: auto; border-radius: 10px; background-color: white; padding: 20px;">
		<div>
			<h4>Schedule Continuous Detection Report</h4>
			<hr />
			<div class="form-group">
				<div class="row">
					<div class="col-md-4">
						<label>Report Type</label>
						<select class="form-control" id="type" name="Type" style="border-radius: 5px; padding-left: 10px; padding-right: 10px;">
							<option value="">Select Report Type</option>
						</select>
					</div>
					<div class="col-md-4">
						<label>&nbsp;</label>
						<select class="form-control" id="camera" name="Camera" style="border-radius: 5px; padding-left: 10px; padding-right: 10px;">
							<option value="">Select Camera</option>
						</select>
					</div>
					<div class="col-md-4">
						<label>&nbsp;</label>
						<input type="text" class="form-control" id="dateRange" name="dateRange" style="border-radius: 5px; padding-left: 10px; padding-right: 10px; background-color: white;" placeholder="Select Date Range" readonly>
					</div>
					<div class="col-md-4">
						<label>&nbsp;</label>
						<input type="time" class="form-control" id="startTime" name="startTime" style="border-radius: 5px; padding-left: 10px; padding-right: 10px; background-color: white;">
					</div>
					<div class="col-md-4">
						<label>&nbsp;</label>
						<input type="time" class="form-control" id="endTime" name="endTime" style="border-radius: 5px; padding-left: 10px; padding-right: 10px; background-color: white;">
					</div>
				</div>
			</div>
			<div>
				<button class="btn btn-primary" id="searchBtn"
						style="padding: 8px 30px; border: none; border-radius: 5px; cursor: pointer; margin-right:5px;">
					Search
				</button>
			</div>
		</div>
	</div>

	</br>
	</br>

	<div class="container-fluid">
		<h4>Report Results</h4>
		<hr />
		<div>
			<button class="btn btn-primary" id="CSVBtn">
				CSV
			</button>
			<button class="btn btn-primary" id="PDFBtn">
				PDF
			</button>
		</div>
		<br />
		<div class="table-responsive">
			<table id="patrol-table" class="table table-striped table-bordered">
				<thead>
					<tr>
						<th><input type="checkbox" class="styled-checkbox">No.</th>
						<th>Camera Name</th>
						<th>Video Path</th>
						<th>Date</th>
						<th>Time</th>
						<th>Type</th>
						<th id="link-header">Link</th>
					</tr>
				</thead>
				<tbody>
				</tbody>
			</table>
		</div>
	</div>

	<!-- Modal (Hidden by default) -->
	<div id="videoModal">
		<div class="modal-content">
			<div class="modal-header">
				<!-- Close Button -->
				<button id="closeModalBtn" class="close-modal-btn">Close</button>
			</div>
			<div class="modal-body">
				<video id="videoPlayer" controls class="video-player">
					<!-- Video source will be inserted dynamically -->
				</video>
			</div>
		</div>
	</div>

	@* Initialize for datatable *@
	@section scripts {
		<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
		<script src="https://cdn.datatables.net/1.10.25/js/dataTables.bootstrap4.min.js"></script>
		<script src="~/Assets/Plugins/datatables.net/js/jquery.dataTables.min.js"></script>
		<script src="~/Assets/Plugins/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
		<script>
			$(document).ready(function() {
				$("#patrol-table").DataTable();
			});
			
		</script>
	}

	<script>
		$(document).ready(function() {
            flatpickr("#dateRange", {
				mode: "range",
				dateFormat: "d M, Y"
			});

			function loadReportTypes() {
				$.ajax({
					url: '/FireDetectionReport2/GetReportTypes',
					method: 'GET',
					success: function (data) {
						var dropdown = $('#type');
						dropdown.empty();
						dropdown.append('<option value="">Select Report Type</option>');

						$.each(data, function (index, value) {
							dropdown.append('<option value="' + value + '">' + value + '</option>');
						});
					},
					error: function () {
						alert('Failed to load report types.');
					}
				});
			}

			function loadCameras() {
				$.ajax({
					url: "/FireDetectionReport2/GetCameras",
					type: "GET",
					success: function (response) {
						var cameraDropdown = $("#camera");
						cameraDropdown.empty();
						cameraDropdown.append('<option value="">Select Camera</option>');

						$.each(response, function (index, camera) {
							cameraDropdown.append('<option value="' + camera.cameraId + '">' + camera.name + '</option>');
						});
					},
					error: function () {
						console.error("Failed to load cameras.");
					}
				});
			}

			loadReportTypes();
			loadCameras();

			$('#searchBtn').on('click', function () {
				const type = $('#type').val();
				const cameraId = $('#camera').val();
				//const checkPointName = $('#checkPoint').val();
				const dateRange = $('#dateRange').val();
				const startTime = $('#startTime').val();
				const endTime = $('#endTime').val();

				// Highlight missing fields
				if (!type) $('#type').css('border', '1px solid red');
				if (!cameraId) $('#cameraId').css('border', '1px solid red');
				if (!dateRange) $('#dateRange').css('border', '1px solid red');
				if (!startTime) $('#startTime').css('border', '1px solid red');
				if (!endTime) $('#endTime').css('border', '1px solid red');

				// Check if all required fields are filled
				if (!type || !cameraId || !dateRange || !startTime || !endTime) {
					alert('Please fill in all required fields!');
					return; // Stop further execution if any field is missing
				}

				//console.log(type, routeId, checkPointName, dateRange, startTime, endTime);

				//Render the Patrol Data to frontend
				bindDatatable(type, cameraId, dateRange, startTime, endTime);
			});

			$('#CSVBtn').on('click', function () {
				var csv = [];
				$('#patrol-table tr').each(function () {
					var row = [];
					$(this).find('td, th').each(function (index) {
						if (index < 10) {
							row.push($(this).text());
						}
					});
					csv.push(row.join(','));
				});

				var csvFile = new Blob([csv.join('\n')], { type: 'text/csv' });
				var downloadLink = document.createElement('a');
				downloadLink.download = 'Report.csv';
				downloadLink.href = window.URL.createObjectURL(csvFile);
				downloadLink.style.display = 'none';
				document.body.appendChild(downloadLink);
				downloadLink.click();
				document.body.removeChild(downloadLink);
			});

			$('#PDFBtn').on('click', function () {
				const { jsPDF } = window.jspdf;
				var doc = new jsPDF();

				var rowData = [];
				$('#patrol-table tr').each(function () {
					var row = [];
					$(this).find('td, th').each(function (index) {
						if (index < 10) {
							row.push($(this).text());
						}
					});
					rowData.push(row);
				});

				doc.autoTable({
					head: [rowData[0]],
					body: rowData.slice(1)
				});

				doc.save('Report.pdf');
			});

			// Play Video Button Click Event
			$(document).on('click', '.play-video', function () {
				var videoUrl = $(this).data('video-url'); // Get the video URL (Base64 string)

				if (videoUrl) {
					var videoPlayer = document.getElementById("videoPlayer");
					videoPlayer.src = videoUrl; // Set Base64 string as the video source

					var modal = document.getElementById("videoModal");
					modal.style.display = "flex"; // Show the modal
				} else {
					alert('Video URL is invalid.');
				}
			});


			// Close Modal Function
			function closeModal() {
				// Hide the modal
				var modal = document.getElementById("videoModal");
				modal.style.display = "none";

				// Stop the video when closing the modal
				var videoPlayer = document.getElementById("videoPlayer");
				videoPlayer.pause();
				videoPlayer.currentTime = 0;

				// Clear the video source to stop the video
				videoPlayer.src = '';
			}

			// Attach the closeModal function to the close button
			$(document).on('click', '#closeModalBtn', function() {
				closeModal();
			});

			function bindDatatable(type, cameraId, dateRange, startTime, endTime) {
				var tableElement = $('#patrol-table');

				if (tableElement.length > 0) {
					if ($.fn.dataTable.isDataTable(tableElement)) {
						tableElement.DataTable().destroy();
						tableElement.empty();
					}
				}

					// Define columns for DataTable
				var columns = [
					{
						"data": null,
						"title": "No.",
						"render": function (data, type, row, meta) {
							return meta.row + meta.settings._iDisplayStart + 1;
						},
						"orderable": false
					},
					{
						"data": "cameraName",
						"title": "Camera Name"
					},
					{
						"data": "videoPath",
						"title": "Video Path"
					},
					{
						"data": "date",
						"title": "Date",
						"render": function(data) {
							return data;
						}
					},
					{
						"data": "time",
						"title": "Time",
						"render": function(data) {
							return data;
						}
					},
					{
						"data": "videoLink",
						"title": "Link",
						"render": function(data, type, row) {
							return data ? `<button class="play-video" data-video-url="${data}">Play Video</button>` : '';
						}
					}
				];

				tableElement.DataTable({
					"processing": false,
					"serverSide": false,
					"searching": true,
					"paging": true,
					"ajax": {
						"url": "/FireDetectionReport2/GetPatrolData",
						"type": "GET",
						"data": {
							cameraId: cameraId,
							type: type,
							dateRange: dateRange,
							startTime: startTime,
							endTime: endTime
						},
						"dataSrc": function (json) {
							if (!json.data || json.data.length === 0) {
								alert("No data found.");
								return [];
							}
							return json.data;
						},
						"error": function (xhr, status, error) {
							console.error("Error:", error);
							alert("An error occurred while fetching data.");
						}
					},
					"columns": columns
				});
			}
		});

	</script>
</body>


</html>
